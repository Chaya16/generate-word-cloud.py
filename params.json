{
  "name": "generate-word-cloud.py - on PyPI by Naereen",
  "tagline": "A simple Python (2 or 3) script to generate a PNG word-cloud image from a bunch of text files. Based on word_cloud by @amueller.",
  "body": "# ``generate-word-cloud.py``\r\nA simple Python :snake: script to generate a square wordcloud :cloud: from one (or more) text file(s).\r\nSupporting both Python 2 and 3 (2.7+ and 3.4+).\r\n[![generatewordcloud in pypi](https://img.shields.io/pypi/v/generatewordcloud.svg)](https://pypi.python.org/pypi/generatewordcloud)\r\n\r\n![generate-word-cloud example meta](https://github.com/Naereen/generate-word-cloud.py/raw/master/wordcloud_meta.png)\r\n\r\n> Based on the great [word_cloud](https://github.com/amueller/word_cloud/) module by [@amueller](https://github.com/amueller/).\r\n\r\n[![PyPI version](https://img.shields.io/pypi/v/generatewordcloud.svg)](https://pypi.python.org/pypi/generatewordcloud/)\r\n[![PyPI license](https://img.shields.io/pypi/l/generatewordcloud.svg)](https://pypi.python.org/pypi/generatewordcloud/)\r\n[![PyPI format](https://img.shields.io/pypi/format/generatewordcloud.svg)](https://pypi.python.org/pypi/generatewordcloud/)\r\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/generatewordcloud.svg)](https://pypi.python.org/pypi/generatewordcloud/)\r\n[![PyPI implementation](https://img.shields.io/pypi/implementation/generatewordcloud.svg)](https://pypi.python.org/pypi/generatewordcloud/)\r\n[![PyPI status](https://img.shields.io/pypi/status/generatewordcloud.svg)](https://pypi.python.org/pypi/generatewordcloud/)\r\n\r\n----\r\n\r\n## How to use it?\r\n### 1. [Requirements](requirements.txt)\r\nThe usual module [matplotlib](http://matplotlib.org/) is needed for the plotting,\r\n[docopt](https://github.com/docopt/docopt) is needed for the command line interface,\r\nand [word_cloud](https://github.com/amueller/word_cloud/) is needed for the actual work (generating the cloud of words after reading the files).\r\n\r\nThe required Python (2 or 3) modules can be installed with [pip](http://pip.readthedocs.io/), either directly:\r\n\r\n```bash\r\n# Directly:\r\nsudo pip install matplotlib docopt word_cloud\r\n```\r\n\r\nOr with the [requirements.txt](requirements.txt) file:\r\n```bash\r\nsudo pip install -r requirements.txt\r\n```\r\n\r\n*Note*: if [ansicolortags](https://pypi.python.org/pypi/ansicolortags) is available, it will be used to print nice colors in the help and during the generation of word clouds.\r\n\r\n### 2. Installation\r\nClone the repository, copy the [script (generate-word-cloud.py)](https://github.com/Naereen/generate-word-cloud.py/raw/master/generate-word-cloud.py) somewhere in your PATH (e.g., ``~/.local/bin/``).\r\n\r\nYou can also just download the script itself:\r\n\r\n```bash\r\n$ wget https://raw.githubusercontent.com/Naereen/generate-word-cloud.py/master/generate-word-cloud.py\r\n$ cp generate-word-cloud.py /path/to/a/directory/in/your/PATH/\r\n```\r\n\r\nNote: The script is *also* available from [PyPI](https://pypi.python.org/pypi/) : [pypi.python.org/pypi/generatewordcloud](https://pypi.python.org/pypi/generatewordcloud).\r\nYou can install it using [pip](http://www.pip-installer.org/).\r\n\r\n```bash\r\n$ pip install generatewordcloud\r\n$ # Or maybe you need sudo rights:\r\n$ sudo pip install generatewordcloud\r\n```\r\n\r\n[![PyPI version](https://img.shields.io/pypi/v/generatewordcloud.svg)](https://pypi.python.org/pypi/generatewordcloud/)\r\n[![PyPI license](https://img.shields.io/pypi/l/generatewordcloud.svg)](https://pypi.python.org/pypi/generatewordcloud/)\r\n[![PyPI format](https://img.shields.io/pypi/format/generatewordcloud.svg)](https://pypi.python.org/pypi/generatewordcloud/)\r\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/generatewordcloud.svg)](https://pypi.python.org/pypi/generatewordcloud/)\r\n[![PyPI implementation](https://img.shields.io/pypi/implementation/generatewordcloud.svg)](https://pypi.python.org/pypi/generatewordcloud/)\r\n[![PyPI status](https://img.shields.io/pypi/status/generatewordcloud.svg)](https://pypi.python.org/pypi/generatewordcloud/)\r\n\r\n----\r\n\r\n### 3. Usage\r\n#### Help:\r\n```bash\r\n$ generate-word-cloud.py --help\r\n```\r\n\r\n#### From one or two files\r\nGenerate a wordcloud from two `txt` files in the current directory, save it to `wordcloud_txt.png`.\r\n\r\n```bash\r\n$ generate-word-cloud.py -o ./wordcloud_txt.png ./file1.txt ./file2.txt\r\n```\r\n\r\nGenerate a wordcloud from the textfile `hamlet.txt` (~ 8000 lines), saving to `hamlet.png`:\r\n\r\n```bash\r\n$ generate-word-cloud.py -o ./hamlet.png ./hamlet.txt\r\n```\r\n![generate-word-cloud example hamlet](https://github.com/Naereen/generate-word-cloud.py/raw/master/wordcloud_hamlet.png)\r\n\r\n(It should work on pretty big text files without any issue.)\r\n\r\n----\r\n\r\n## Other examples\r\n### From a lot of Python scripts (~ 200) :snake:\r\n![generate-word-cloud example python](https://github.com/Naereen/generate-word-cloud.py/raw/master/wordcloud_python.png)\r\n\r\n### From a lot of Bash scripts (~ 150) :shell:\r\n![generate-word-cloud example bash](https://github.com/Naereen/generate-word-cloud.py/raw/master/wordcloud_bash.png)\r\n\r\n### From a lot of LaTeX files (~ 180) :eggplant:\r\n![generate-word-cloud example LaTeX](https://github.com/Naereen/generate-word-cloud.py/raw/master/wordcloud_latex.png)\r\n\r\n### :art: Meta example\r\nGenerate a wordcloud from the [README.md](https://github.com/Naereen/generate-word-cloud.py/tree/master/README.md) and [generate-word-cloud.py](https://github.com/Naereen/generate-word-cloud.py/tree/master/generate-word-cloud.py) files **of this very project**, save it to `wordcloud_meta.png`!\r\n\r\n```bash\r\n$ generate-word-cloud.py -o ./wordcloud_meta.png ./*.md ./*.py\r\n```\r\n![generate-word-cloud example meta](https://github.com/Naereen/generate-word-cloud.py/raw/master/wordcloud_meta.png)\r\n\r\n----\r\n\r\n## Features\r\n- [x] Support one or more input file(s), will cleanly skip any file it fails to find or fails to read,\r\n- [x] Custom output file, won't be overwritten (except with `-f` flag),\r\n- [x] Nice command line interface ([argparse](https://docs.python.org/2.7/library/argparse.html) powered). I switched to [docopt](https://github.com/docopt/docopt) after realizing how awesome it is!\r\n- [x] Has a command line option for every important parameter (max nb of words, width, height etc).\r\n- [x] Input filenames with spaces in their name were seen as several files (e.g. ``this file.txt``), FIXED with the switch to [docopt](https://github.com/docopt/docopt).\r\n\r\n----\r\n\r\n## :page_with_curl: Complete documentation (`--help`)\r\n```\r\n$ generate-word-cloud.py -h | --help\r\nUsage:\r\n  generate-word-cloud.py [-s | --show] [-f | --force] [-o OUTFILE | --outfile=OUTFILE]\r\n                         [-t TITLE | --title=TITLE] [-m MAX | --max=MAX]\r\n                         [-w WIDTH | --width=WIDTH] [-H HEIGHT | --height=HEIGHT]\r\n                         INFILE...\r\n  generate-word-cloud.py (-h | --help)\r\n  generate-word-cloud.py (-v | --version)\r\n\r\nOptions:\r\n  -h --help            Show this help message and exit.\r\n  -v --version         Show program's version number and exit.\r\n  -s --show            Show the image but do not save it [default False].\r\n  -f --force           Force to write the image, even if present (default is to ask before overwriting an existing file) [default False].\r\n  -o OUTFILE --outfile=OUTFILE\r\n                       Filename for the generated image [default 'wordcloud.png'].\r\n  -t TITLE --title=TITLE\r\n                       Title for the image [default None].\r\n  -m MAX --max MAX\r\n                       Max number of words to display on the cloud word [default 150].\r\n  -w WIDTH --width WIDTH\r\n                       Width of the generate image [default 400].\r\n  -H HEIGHT --height HEIGHT\r\n                       Height of the generate image [default 300].\r\n  INFILE               A text file to read.\r\n```\r\n\r\n----\r\n\r\n## :memo: TODO\r\n- [x] Start it, from [this example](https://github.com/amueller/word_cloud/blob/master/examples/simple.py),\r\n- [x] Run it on some interesting examples, embed them here (as images),\r\n- [X] Check on weird encodings? (i.e., not UTF-8). It works fine!\r\n- [X] Test it against :closed_book: VERY large files (million of line) ? It works fine, slowly but fine.\r\n- [X] Test it against :books: LOTS of files (several thousands) ? It works fine, slowly but fine.\r\n- [X] Publish it on PyPI: it is available at [pypi.python.org/pypi/generatewordcloud/](https://pypi.python.org/pypi/generatewordcloud/)\r\n- [ ] Write a small article about it for [my blog](http://perso.crans.org/besson/).\r\n\r\n### :bug: Knows issues\r\n- [ ] Only tested on (X)Ubuntu (15.10), but it should work on other GNU/Linux distribution and Mac OS X (and probably Windows), if they support [docopt](https://github.com/docopt/docopt) and has both [docopt](https://github.com/docopt/docopt) and [word_cloud](https://github.com/amueller/word_cloud/) installed.\r\n\r\n### :bug: **Unknown issues?**\r\n> [Use the issue tracker](https://github.com/Naereen/generate-word-cloud.py/issues/new) to notify me of a bug!\r\n\r\n----\r\n\r\n## About\r\n### *Why write this script?*\r\n> There already is a lot of [good cloud word generator online](https://duckduckgo.com/?q=cloud+word+generator&ia=web), e.g. [wordle.net](http://www.wordle.net/).\r\n\r\n1. I wanted a way to visualize the major keywords of Bash and Python (my two [favorite programming languages](https://wakatime.com/@lbesson)) and of Markdown/Strapdown, reStructuredText and LaTeX (my favorite typeset documents system),\r\n2. The original project [word_cloud](https://github.com/amueller/word_cloud/) seemed cool. And it is. Great job [@amueller](https://github.com/amueller/) :clap: !\r\n3. [Clouds of words are interesting](https://www.academia.edu/20224642/)! And Python is awesome!\r\n\r\n### Author\r\n> [Lilian Besson (Naereen)](https://github.com/Naereen/).\r\n\r\n## :scroll: License ? [![GitHub license](https://img.shields.io/github/license/Naereen/generate-word-cloud.py.svg)](https://github.com/Naereen/generate-word-cloud.py/blob/master/LICENSE)\r\nThis plug-in is published under the terms of the [GPLv3 License](http://www.gnu.org/licenses/gpl.html) (file [LICENSE.txt](LICENSE.txt)),\r\n© [Lilian Besson](https://GitHub.com/Naereen), 2016.\r\n\r\n[![Maintenance](https://img.shields.io/badge/Maintained%3F-yes-green.svg)](https://GitHub.com/Naereen/generate-word-cloud.py/graphs/commit-activity)\r\n[![Ask Me Anything !](https://img.shields.io/badge/Ask%20me-anything-1abc9c.svg)](https://GitHub.com/Naereen/ama)\r\n[![Analytics](https://ga-beacon.appspot.com/UA-38514290-17/github.com/Naereen/generate-word-cloud.py/README.md?pixel)](https://GitHub.com/Naereen/generate-word-cloud.py/)\r\n[![made-with-python](https://img.shields.io/badge/Made%20with-Python-1f425f.svg)](https://www.python.org/)\r\n\r\n[![ForTheBadge uses-badges](http://ForTheBadge.com/images/badges/uses-badges.svg)](http://ForTheBadge.com)\r\n[![ForTheBadge uses-git](http://ForTheBadge.com/images/badges/uses-git.svg)](https://GitHub.com/)\r\n\r\n[![ForTheBadge built-with-love](http://ForTheBadge.com/images/badges/built-with-love.svg)](https://GitHub.com/Naereen/)\r\n",
  "google": "UA-38514290-17",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}